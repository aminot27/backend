import tracebackfrom django.contrib.auth.models import Userfrom rest_framework import serializersfrom rest_framework.exceptions import AuthenticationFailedfrom rest_framework_simplejwt.serializers import TokenObtainPairSerializerfrom master_serv.serializers.user_serializer import UserSerializerfrom master_serv.utils.response_util import Resp, ToJsonfrom master_serv.utils.token_auth_util import TokenSimpleJWTAuthclass AuthenticationSerializerResponse(serializers.Serializer):    values = serializers.CharField()class AuthenticationSerializer(TokenObtainPairSerializer):    def validate(self, attrs):        from apps.master.serializers.system_serializer import SystemUserResponse        try:            try:                data = super().validate(attrs)                refresh = super().get_token(self.user)                data['refresh'] = str(refresh)                data['access'] = str(refresh.access_token)                try:                    auth_user_id = TokenSimpleJWTAuth().get_user_id_from_token(data['access'])                    auth_user = User.objects.get(id=auth_user_id)                    data['user'] = UserSerializer(auth_user).data                    return Resp(data_=data, msg_='Authentication successfully').result()                except User.DoesNotExist:                    return Resp(msg_='No active account found with the given credentials', status_=False).result()            except AuthenticationFailed:                return Resp(msg_='Authentication failed', status_=False).result()        except:            tb = traceback.format_exc()            print(tb)            return Resp(msg_='Error in validation process', status_=False).result()