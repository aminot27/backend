version: '3.3'

#volumes:
#  production_postgres_data: { }
#  production_postgres_data_backups: { }
#  production_caddy: { }

services:
  #  django: &django
  tech_store_serv_prod:
    build:
      context: .
      dockerfile: ./.docker-compose/prod/django/Dockerfile
    image: tech_store_serv_prod
    container_name: tech_store_serv_prod
    #    depends_on:
    #      - postgres
    #      - redis
    #    env_file:
    #      - ./.envs/.prod/.django
    #      - ./.envs/.prod/.postgres
    ports:
      - "8100:8000"
    command: /start

#  postgres:
#    build:
#      context: .
#      dockerfile: ./compose/prod/postgres/Dockerfile
#    image: cride_production_postgres
#    volumes:
#      - production_postgres_data:/var/lib/postgresql/data
#      - production_postgres_data_backups:/backups
#    env_file:
#      - ./.envs/.prod/.postgres

#  caddy:
#    build:
#      context: .
#      dockerfile: ./compose/prod/caddy/Dockerfile
#    image: cride_production_caddy
#    depends_on:
#      - django
#    volumes:
#      - production_caddy:/root/.caddy
#    env_file:
#      - ./.envs/.prod/.caddy
#    ports:
#      - "0.0.0.0:80:80"
#      - "0.0.0.0:443:443"

#  redis:
#    image: redis:3.2
#
#  celeryworker:
#    <<: *django
#    image: cride_production_celeryworker
#    command: /start-celeryworker
#
#  celerybeat:
#    <<: *django
#    image: cride_production_celerybeat
#    command: /start-celerybeat
#
#  flower:
#    <<: *django
#    image: cride_production_flower
#    ports:
#      - "5555:5555"
#    command: /start-flower
